from os import close
from netmiko import ConnectHandler, ssh_exception
import json
from time import sleep
import subprocess
import getpass
import time
import sys
import re

# Function to get the arp and find mac from L3 Switch
def GET_ARP(L3_SWITCH,TARGET_IP,DEV_VARS):
    try:
        try:
            print('Connecting to the device: ' + L3_SWITCH)
            DEV_VARS['host'] = L3_SWITCH
            Connect_To_Device = ConnectHandler(**DEV_VARS)
            Connect_To_Device.enable()
            GET_ARP_RESULT = Connect_To_Device.send_command(
                'sh ip arp ' + TARGET_IP)
            if FOUNDED_MAC := re.search("[0-9a-fA-F]{4}[.][0-9a-fA-F]{4}[.][0-9a-fA-F]{4}", GET_ARP_RESULT):
                print(f'Mac address of {TARGET_IP} is {FOUNDED_MAC}')
                for HOST in NETWORK_DEVICES:
                    print('Connecting to the device: ' + HOST)
                    FIND_MAC_L2(FOUNDED_MAC.group(), HOST,IOS_VARS)

        except (ssh_exception.AuthenticationException, EOFError):
            print(f'Authentication Error')
        except ssh_exception.NetmikoTimeoutException:
            print(f'Connection Timeout')
    except IndexError:
        pass

# Function to find mac address from all access devices
def FIND_MAC_L2(FOUNDED_MAC,HOST,DEV_VARS):
    try:
        # add device parametter to var(device) for connecthandler
        DEV_VARS['host'] = HOST
        Connect_to_l2device = ConnectHandler(**DEV_VARS)
        get_hostname = Connect_to_l2device.send_command(
            f'show version | in uptime')
        # get hostname with show version command, split with space and get first item in list
        print(f'Hostname: {get_hostname.split(" ")[0]}')
        MAC_L2 = Connect_to_l2device.send_command(
            f'show mac address-table address {FOUNDED_MAC}')
        get_interface_name = re.search(r"\bFa.+[0-9]\b|\bGi.+[0-9]\b", MAC_L2)
        if get_interface_name:
            check_trunk = Connect_to_l2device.send_command(
                f'show running-config interface {get_interface_name.group()}')
            get_description = Connect_to_l2device.send_command(
                f'show interface {get_interface_name.group()} description')
            if 'trunk' in check_trunk:
                print('MAC address on this device received via trunk port!')
                print('show interface description: ')
                print('----------------------------------------------------------------------------')
                print(get_description)
                print('----------------------------------------------------------------------------')
            else:
                print('----------------------------------------------------------------------------')
                print(get_description)
                print('----------------------------------------------------------------------------')                           
        else:
            print('Mac address not found in this device!')

    except:
        pass

with open('hosts.json','rt') as FILE:
    NETWORK_DEVICES = json.load(FILE)
print('Enter IP to find location:')
TARGET_IP = (str(input()))
print('Username: ')
USERNAME = (str(input()))
PASSWORD = getpass.getpass(prompt='Password: ', stream=None)
L3_SWITCH = '172.22.10.1'
IOS_VARS = {'username': USERNAME ,'password': PASSWORD , 'device_type': 'cisco_ios'}
GET_ARP(L3_SWITCH, TARGET_IP,IOS_VARS)
FILE.close()
